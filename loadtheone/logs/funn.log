* input data: env at 0x43000000, 3830 bytes. [+29367]
* strings at 0x80000010, environ[63] at 0x80000f10. [+30417]
* heap at 0x80000000, 10737418240 bytes. [+351]
* input data: fibre at 0x80001140, 32 bytes. [+1479]
* input data: slr vars at 0x80001118, 16 bytes. [+866]
* connected to I/O, 16 devices, 8 notification channels. [+767]
* smc at 0x4e000000, enumerates 15 devices. [+513]
* I/O enumeration data at 0x10000000. [+1282]
* uart at 0x44000000. [+1217]
* rpc interface at 0x45000000. [+608]
* lcd at 0x46000000, size 80x25. [+453]
* lcd at 0x47000000, size 16x2. [+369]
* rtc at 0x48000000. [+306]
* gfxctl at 0x49000000, framebuffer at 0x4a000000. [+613]
* argument ROM at 0x4c000000. [+815]
* configuration ROM at 0x4d000000. [+527]
* input data: arguments at 0x80001168, argv[2] at 0x800011a8, 50 bytes. [+2920]
* reading configuration...
  - core frequency: 1000MHz.
  - 256 thread and 32 family entries per core.
  - system version: 3.2.61-d2aa8.
  - master frequency: 4000MHz.
  done. [+244807]
* SEP init: setting up for 128 cores...  done. [+2682]
* allocating places for the C stdlib... success: stdio at 0x103, malloc at 0x105, dtoa at 0x107 [+2658]
* -n 1 -> request to SEP... success, t_main goes to pid=0x109 [+7703]
* init compiled with slc 3.7b.40-c437a2.

Microgrid says:  h e l l o  w o r l d !

init done, program will start now; core cycles so far: 348937
Program from config ./cfg/funn.cfg
Warning verbosity set to quite high
Loading ../loadable/funnny
File opened
File read
Closing file
base_file: 0x0
base_used: 0x8000000000000
Trying to load program: 0x801011d8 size 0x111087 @ 0x8000000000000
load : 1_0: size 0x528,0x528 @ 0x8000000000000 with 1
Loader 0x528 bytes loaded at 0x8000000000000, of which 0x0 void
load : 1_1: size 0x1004c8,0x1004c8 @ 0x8000001000000 with 5
Loader 0x1004c8 bytes loaded at 0x8000001000000, of which 0x0 void
load : 1_2: size 0x1d8,0x1c8 @ 0x80000011104c8 with 7
Loader 0x1c8 bytes loaded at 0x80000011104c8, of which 0x10 void
Loaded microthreaded ELF binary with virtual base 0x8000000000000 entry point 0x8000001000344
Got 21 sections of size 64 each Expecting size 64
Stringtable in section 18

Section   #(    Type):            Name, Type#          Flags,          Addr,           Off,          Size,   Link,  Info,          Align,       Entsize
Section   0(NULLTYPE):                ,     0,              0,             0,             0,             0,      0,     0,              0,             0
Section   1(Progbits):           .text,     1,              6,      16777216,         65536,           896,      0,     0,             64,             0
Section   2(    Hash):           .hash,     5,              2,           400,           400,           240,      3,     0,              8,             8
Section   3(  Dynsym):         .dynsym,    11,              2,           640,           640,           312,      4,     1,              8,            24
Setting (Dyn)symbol pointer
Sym   0:                (0)               0x0 of size     0,   0< 0, 0>   0,        0
Sym   1:              bp(2)         0x1000004 of size    76,  18< 1, 2> 136,        1
Sym   2:          _start(68)         0x1000344 of size    44,  18< 1, 2> 136,        1
Sym   3:       room_argv(46)         0x1000400 of size 1048576,  17< 1, 1>   0,        8
Sym   4:            strs(41)         0x1110628 of size    56,  17< 1, 1>   0,       13
Sym   5: dudewheresmycard(5)         0x1000084 of size     8,  18< 1, 2> 128,        1
Sym   6:     __bss_start(63)         0x1110690 of size     0,  16< 1, 0>   0,    65521
Sym   7:    iaintfoundit(22)         0x10000c4 of size    44,  18< 1, 2> 136,        1
Sym   8:             lbp(1)         0x1110698 of size     8,  17< 1, 1>   0,       16
Sym   9:          _edata(56)         0x1110690 of size     0,  16< 1, 0>   0,    65521
Sym  10:            _end(75)         0x11106a0 of size     0,  16< 1, 0>   0,    65521
Sym  11:           lmain(35)         0x1000104 of size   516,  18< 1, 2> 136,        1
Sym  12:               a(61)         0x1110688 of size     8,  17< 1, 1>   0,       15
Section   4(  Strtab):         .dynstr,     3,              2,           952,           952,            80,      0,     0,              1,             0
Section   5(    Rela):       .rela.dyn,     4,              2,          1032,          1032,           240,      3,     0,              8,            24
Found RELA section
Section   6(    Rela):       .rela.plt,     4,              2,          1272,          1272,            48,      3,    12,              8,            24
Found RELA section
Section   7(Progbits):         .rodata,     1,             50,      16778112,         66432,            76,      0,     0,              1,             1
Section   8(Progbits):        .argroom,     1,              2,      16778240,         66560,       1048576,      0,     0,            256,             0
Section   9(Progbits):   .eh_frame_hdr,     1,              2,      17826816,       1115136,            52,      0,     0,              4,             0
Section  10(Progbits):       .eh_frame,     1,              2,      17826872,       1115192,           144,      0,     0,              8,             0
Section  11( Dynamic):        .dynamic,     6,              3,      17892552,       1115336,           288,      4,     0,              8,            16
Section  12(Progbits):            .plt,     1,              7,      17892848,       1115632,            56,      0,     0,             16,             0
Section  13(Progbits):           .data,     1,              3,      17892904,       1115688,            56,      0,     0,              8,             0
Section  14(Progbits):            .got,     1,              3,      17892960,       1115744,            40,      0,     0,              8,             0
Section  15(Progbits):          .sdata,     1,      268435459,      17893000,       1115784,             8,      0,     0,              8,             0
Section  16(  Nobits):           .sbss,     8,      268435459,      17893008,       1115792,            16,      0,     0,              8,             0
Section  17(Progbits):        .comment,     1,              0,             0,       1115792,            36,      0,     0,              1,             0
Section  18(  Strtab):       .shstrtab,     3,              0,             0,       1115828,           158,      0,     0,              1,             0
Section  19(  Symtab):         .symtab,     2,              0,             0,       1117336,           840,     20,    23,              8,            24
Sym   0:                (0)               0x0 of size     0,   0< 0, 0>   0,        0
Sym   1:                (0)         0x1000000 of size     0,   3< 0, 3>   0,        1
Sym   2:                (0)             0x190 of size     0,   3< 0, 3>   0,        2
Sym   3:                (0)             0x280 of size     0,   3< 0, 3>   0,        3
Sym   4:                (0)             0x3b8 of size     0,   3< 0, 3>   0,        4
Sym   5:                (0)             0x408 of size     0,   3< 0, 3>   0,        5
Sym   6:                (0)             0x4f8 of size     0,   3< 0, 3>   0,        6
Sym   7:                (0)         0x1000380 of size     0,   3< 0, 3>   0,        7
Sym   8:                (0)         0x1000400 of size     0,   3< 0, 3>   0,        8
Sym   9:                (0)         0x1100400 of size     0,   3< 0, 3>   0,        9
Sym  10:                (0)         0x1100438 of size     0,   3< 0, 3>   0,       10
Sym  11:                (0)         0x11104c8 of size     0,   3< 0, 3>   0,       11
Sym  12:                (0)         0x11105f0 of size     0,   3< 0, 3>   0,       12
Sym  13:                (0)         0x1110628 of size     0,   3< 0, 3>   0,       13
Sym  14:                (0)         0x1110660 of size     0,   3< 0, 3>   0,       14
Sym  15:                (0)         0x1110688 of size     0,   3< 0, 3>   0,       15
Sym  16:                (0)         0x1110690 of size     0,   3< 0, 3>   0,       16
Sym  17:                (0)               0x0 of size     0,   3< 0, 3>   0,       17
Sym  18:         id.1394(1)         0x1110690 of size     4,   1< 0, 1>   0,       16
Sym  19:       SIZE_ARGV(9)          0x100000 of size     0,   0< 0, 0>   0,    65521
Sym  20:        _DYNAMIC(19)         0x11104c8 of size     0,   1< 0, 1>   2,    65521
Sym  21: _PROCEDURE_LINKAGE_TABLE_(28)         0x11105f0 of size     0,   1< 0, 1>   2,    65521
Sym  22: _GLOBAL_OFFSET_TABLE_(54)         0x1110660 of size     0,   1< 0, 1>   2,    65521
Sym  23:              bp(76)         0x1000004 of size    76,  18< 1, 2> 136,        1
Sym  24:          _start(79)         0x1000344 of size    44,  18< 1, 2> 136,        1
Sym  25:       room_argv(86)         0x1000400 of size 1048576,  17< 1, 1>   0,        8
Sym  26:            strs(96)         0x1110628 of size    56,  17< 1, 1>   0,       13
Sym  27: dudewheresmycard(101)         0x1000084 of size     8,  18< 1, 2> 128,        1
Sym  28:     __bss_start(118)         0x1110690 of size     0,  16< 1, 0>   0,    65521
Sym  29:    iaintfoundit(130)         0x10000c4 of size    44,  18< 1, 2> 136,        1
Sym  30:             lbp(143)         0x1110698 of size     8,  17< 1, 1>   0,       16
Sym  31:          _edata(147)         0x1110690 of size     0,  16< 1, 0>   0,    65521
Sym  32:            _end(154)         0x11106a0 of size     0,  16< 1, 0>   0,    65521
Sym  33:           lmain(159)         0x1000104 of size   516,  18< 1, 2> 136,        1
Sym  34:               a(165)         0x1110688 of size     8,  17< 1, 1>   0,       15
Section  20(  Strtab):         .strtab,     3,              0,             0,       1118176,           167,      0,     0,              1,             0
Rela:: 0x1110628, (+0x1000397), 0x1b: 27, 0
Changing Rel '' Size 0: 0x1000397 <a:0x1000397 Symv:0x0> @0x1000397 to 0x8000001000397
Rela:: 0x1110630, (+0x100039c), 0x1b: 27, 0
Changing Rel '' Size 0: 0x100039c <a:0x100039c Symv:0x0> @0x100039c to 0x800000100039c
Rela:: 0x1110638, (+0x10003a1), 0x1b: 27, 0
Changing Rel '' Size 0: 0x10003a1 <a:0x10003a1 Symv:0x0> @0x10003a1 to 0x80000010003a1
Rela:: 0x1110640, (+0x10003a5), 0x1b: 27, 0
Changing Rel '' Size 0: 0x10003a5 <a:0x10003a5 Symv:0x0> @0x10003a5 to 0x80000010003a5
Rela:: 0x1110648, (+0x10003aa), 0x1b: 27, 0
Changing Rel '' Size 0: 0x10003aa <a:0x10003aa Symv:0x0> @0x10003aa to 0x80000010003aa
Rela:: 0x1110650, (+0x10003b6), 0x1b: 27, 0
Changing Rel '' Size 0: 0x10003b6 <a:0x10003b6 Symv:0x0> @0x10003b6 to 0x80000010003b6
Rela:: 0x1110688, (+0x10003c5), 0x1b: 27, 0
Changing Rel '' Size 0: 0x10003c5 <a:0x10003c5 Symv:0x0> @0x10003c5 to 0x80000010003c5
Rela:: 0x1110660, (+0x0), 0x400000019: 25, 4
Changing Glob 'strs' Size 56: 0x1110628 <a:0x0 Symv:0x1110628> @0x1110628 to 0x8000001110628
Rela:: 0x1110670, (+0x0), 0x800000019: 25, 8
Changing Glob 'lbp' Size 8: 0x1110698 <a:0x0 Symv:0x1110698> @0x1110698 to 0x8000001110698
Rela:: 0x1110680, (+0x0), 0xc00000019: 25, 12
Changing Glob 'a' Size 8: 0x1110688 <a:0x0 Symv:0x1110688> @0x1110688 to 0x8000001110688
Rela:: 0x1110668, (+0x0), 0x50000001a: 26, 5
Changing Jmpslot 'dudewheresmycard' Size 8: 0x1110610 <a:0x0 Symv:0x1000084> @0x1110610 to 0x8000001000084
Rela:: 0x1110678, (+0x0), 0xb0000001a: 26, 11
Changing Jmpslot 'lmain' Size 516: 0x111061c <a:0x0 Symv:0x1000104> @0x111061c to 0x8000001000104
Argroom needed 105, 0 available
Envroom needed 25, 0 available
Arguments while not enough room available
Environment while not enough room available
Spawning program from 0x801011d8 of size 0x111087 with flags 4
To cores: 1 @ 0
00080000010003c5hello world
000Returning from Loader main
0#
'0008000001000397
'Hoi '...
1#
'000800000100039c
'dit '...
2#
'00080000010003a1
'is '...
3#
'00080000010003a5
'een '...
4#
'00080000010003aa
'programma, '...
5#
'00080000010003b6
'of niet soms?
'...
Program with main@0x8000001000344 terminated with 0

<Clocks>1,0,1,1071132,4156347,5075088,5079658</Clocks>
### begin end-of-simulation statistics
24643120	# master cycle counter
6160780	# core cycle counter
1845263	# total executed instructions
0	# total issued fp instructions
## core statistics:
# P  iops      flops     lds       sts       ibytes    obytes    regf_act plbusy    plstgs    plstgrun  pl%busy  pl%eff   ttmax     ttotal    ttsize    tt%occ   ftmax     ftotal    ftsize    ft%occ   xqmax     xqtot     xqavg        
# per-core values
0    1329855   0         181992    176479    1359286   1335717   0.7      3174288   6         9100836   47.8     21.6     3         26680108  256       0.4      3         26785988  32        3.4      1         4291344   1.741396e-01 
1    471610    0         75689     45855     420090    248867    0.0      966127    6         3040097   52.4     7.7      1         4694608   256       0.1      1         4717396   32        0.6      1         24604756  9.984432e-01 
2    43747     0         10798     39        11105     312       0.0      119459    6         295873    41.3     0.7      1         532780    256       0.0      1         555032    32        0.1      1         24638712  9.998211e-01 
3    51        0         5         8         28        40        0.0      150       6         385       42.8     0.0      1         1628      256       0.0      1         4080      32        0.0      1         24642652  9.999810e-01 
# cumulative - all active cores
4    1845263   0         268484    222381    1790509   1584936   0.7      4260024   24        12437191  184.3    30.0     6         31909124  1024      0.5      6         32062496  128       4.1      4         78177464  3.172385e+00 
# average per core = cumulative/4
4    461315.75 0.00      67121.00  55595.25  447627.25 396234.00 0.2      1065006.00 6.00      3109297.75 46.1     7.5      1.50      7977281.00 256.00    0.1      1.50      8015624.00 32.00     1.0      1.00      19544366.00 7.930962e-01 
## descriptions:
# P: core ID / number of active cores
# iops: number of instructions executed
# flops: number of floating-point instructions issued
# lds: number of load instructions executed
# sts: number of store instructions executed
# ibytes: number of bytes loaded from L1 cache into core
# obytes: number of bytes stored into L1 cache from core
# regf_act: register file async port activity (= 100. * ncycles_asyncport_busy / ncorecycles_total)
# plbusy: number of corecycles the pipeline was active
# plstgs: number of pipeline stages
# plstgrun: cumulative number of corecycles active in all pipeline stages
# pl%busy: pipeline efficiency while active (= 100. * plstgrun / plstgs / plbusy)
# pl%eff: pipeline efficiency total (= 100. * iops / ncorecycles_total)
# ttmax: maximum of thread entries simulatenously allocated
# ttotal: cumulative number of thread entries busy (over mastertime)
# ttsize: thread table size
# tt%occ: thread table occupancy (= 100. * ttotal / ttsize / nmastercycles_total)
# ttmax: maximum of family entries simulatenously allocated
# ftotal: cumulative number of family entries busy (over mastertime)
# ftsize: family table size
# ft%occ: family table occupancy (= 100. * ftotal / ftsize / nmastercycles_total)
# xqmax: high water mark of the exclusive allocate queue size
# xqtot: cumulative exclusive allocate queue size (over mastertime)
# xqavg: average size of the exclusive allocate queue (= xqtot / nmastercycles_total)
## memory statistics:
54091	# number of load reqs. by the L1 cache from L2
3461824	# number of bytes loaded by the L1 cache from L2
232182	# number of store reqs. by the L1 cache to L2
2803808	# number of bytes stored by the L1 cache to L2
55238	# number of cache lines read from the ext. mem. interface
37918	# number of cache lines written to the ext. mem. interface
### end end-of-simulation statistics
